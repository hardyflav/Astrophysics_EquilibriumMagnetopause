

function drdtheta2 = drdtheta2(theta, r, ParaSystem)
    
    phi = pi/2;
    NoseDirection = ParaSystem.NoseDirection;

% Conversion of nGrid from Nose_Cartesian to KSM
    exNose = NoseDirection;

    RotationTheta = ParaSystem.Tilt.RotationTheta;
    RotationPhi = ParaSystem.Tilt.RotationPhi;
    M_ini = ParaSystem.M * [0; 0; -1];
    MTilted = RotationPhi * (RotationTheta * M_ini);

    ezNose_temp = -(MTilted - dot(exNose, MTilted)*exNose);
    ezNose = ezNose_temp ./ norm(ezNose_temp);

    eyNose = cross(ezNose, exNose);

    P_CartNose2KSM  = [exNose, eyNose, ezNose];
    P11 =  P_CartNose2KSM(1,1);
	P12 =  P_CartNose2KSM(1,2);
	P13 =  P_CartNose2KSM(1,3);
    
    P21 =  P_CartNose2KSM(2,1);
	P22 =  P_CartNose2KSM(2,2);
	P23 =  P_CartNose2KSM(2,3);
    
    P31 =  P_CartNose2KSM(3,1);
	P32 =  P_CartNose2KSM(3,2);
	P33 =  P_CartNose2KSM(3,3);
    
%% Magnetic Pressure

% Magnetic Pressure: Rotated Magnetic Moment, KSM
    MGridX = 0*r + MTilted(1);
    MGridY = 0*r + MTilted(2);
    MGridZ = 0*r + MTilted(3);


% Magnetic Pressure: Position of Nose, KSM
    XGrid_Norm = 1 .* cos(theta);
    YGrid_Norm = 0 .* sin(theta) .* cos(phi);
    ZGrid_Norm = 1 .* sin(theta) .* sin(phi);
    
    % TEST %
    XGrid_Norm = P_CartNose2KSM(1,1) .* XGrid_Norm + P_CartNose2KSM(1,2) .* YGrid_Norm + P_CartNose2KSM(1,3) .* ZGrid_Norm;
    YGrid_Norm = P_CartNose2KSM(2,1) .* XGrid_Norm + P_CartNose2KSM(2,2) .* YGrid_Norm + P_CartNose2KSM(2,3) .* ZGrid_Norm;
    ZGrid_Norm = P_CartNose2KSM(3,1) .* XGrid_Norm + P_CartNose2KSM(3,2) .* YGrid_Norm + P_CartNose2KSM(3,3) .* ZGrid_Norm;
    % TEST %
%     
%     YGrid_Norm(1, :) = 0;
%     YGrid_Norm(end, :) = 0;

    MdotEr = MTilted(1) .* XGrid_Norm + MTilted(2) .* YGrid_Norm + MTilted(3) .* ZGrid_Norm;
    
    Bx = (1./r.^3) .* ( 3*MdotEr .* XGrid_Norm - MGridX );
    By = (1./r.^3) .* ( 3*MdotEr .* YGrid_Norm - MGridY );
    Bz = (1./r.^3) .* ( 3*MdotEr .* ZGrid_Norm - MGridZ );
    
    
    
drdtheta2 = (P11.^2+(-4).*By.^2.*P11.^2+(-4).*Bz.^2.*P11.^2+P13.^2+(-4).* ...
  By.^2.*P13.^2+(-4).*Bz.^2.*P13.^2+8.*Bx.*By.*P11.*P21+(-4).* ...
  Bx.^2.*P21.^2+(-4).*Bz.^2.*P21.^2+8.*Bx.*By.*P13.*P23+(-4).* ...
  Bx.^2.*P23.^2+(-4).*Bz.^2.*P23.^2+8.*Bx.*Bz.*P11.*P31+8.*By.*Bz.* ...
  P21.*P31+(-4).*Bx.^2.*P31.^2+(-4).*By.^2.*P31.^2+8.*Bx.*Bz.*P13.* ...
  P33+8.*By.*Bz.*P23.*P33+(-4).*Bx.^2.*P33.^2+(-4).*By.^2.*P33.^2+(( ...
  (-1)+4.*By.^2+4.*Bz.^2).*P11.^2+(1+(-4).*By.^2+(-4).*Bz.^2).* ...
  P13.^2+(-8).*Bx.*P11.*(By.*P21+Bz.*P31)+8.*Bx.*P13.*(By.*P23+Bz.* ...
  P33)+4.*(Bz.^2.*(P21.^2+(-1).*P23.^2)+By.*Bz.*((-2).*P21.*P31+2.* ...
  P23.*P33)+By.^2.*(P31.^2+(-1).*P33.^2)+Bx.^2.*(P21.^2+(-1).* ...
  P23.^2+P31.^2+(-1).*P33.^2))).*cos(2.*theta)+((-8).*Bx.*P13.*(By.* ...
  P21+Bz.*P31)+8.*(Bz.*P21+(-1).*By.*P31).*(Bz.*P23+(-1).*By.*P33)+( ...
  -2).*P11.*(P13+(-4).*By.^2.*P13+(-4).*Bz.^2.*P13+4.*Bx.*By.*P23+ ...
  4.*Bx.*Bz.*P33)+8.*Bx.^2.*(P21.*P23+P31.*P33)).*sin(2.*theta)).^( ...
  -1).*((-4).*((-1).*(((-1)+4.*By.^2+4.*Bz.^2).*(Bz.*P13.*P21+(-1).* ...
  Bz.*P11.*P23+(-1).*By.*P13.*P31+By.*P11.*P33).^2+4.*Bx.^4.*(P23.* ...
  P31+(-1).*P21.*P33).^2+8.*Bx.*(By.^2+Bz.^2).*((-1).*Bz.*P13.*P21+ ...
  Bz.*P11.*P23+By.*P13.*P31+(-1).*By.*P11.*P33).*((-1).*P23.*P31+ ...
  P21.*P33)+(-8).*Bx.^3.*(Bz.*P13.*P21+(-1).*Bz.*P11.*P23+(-1).*By.* ...
  P13.*P31+By.*P11.*P33).*((-1).*P23.*P31+P21.*P33)+Bx.^2.*(P13.^2.* ...
  (((-1)+4.*Bz.^2).*P21.^2+(-8).*By.*Bz.*P21.*P31+((-1)+4.*By.^2).* ...
  P31.^2)+4.*(By.^2+Bz.^2).*(P23.*P31+(-1).*P21.*P33).^2+P11.^2.*((( ...
  -1)+4.*Bz.^2).*P23.^2+(-8).*By.*Bz.*P23.*P33+((-1)+4.*By.^2).* ...
  P33.^2)+2.*P11.*P13.*(P31.*(4.*By.*Bz.*P23+P33+(-4).*By.^2.*P33)+ ...
  P21.*(P23+(-4).*Bz.^2.*P23+4.*By.*Bz.*P33)))).*r.^2).^(1/2)+2.* ...
  P11.*P13.*r.*cos(2.*theta)+(-8).*By.^2.*P11.*P13.*r.*cos(2.*theta) ...
  +(-8).*Bz.^2.*P11.*P13.*r.*cos(2.*theta)+8.*Bx.*By.*P13.*P21.*r.* ...
  cos(2.*theta)+8.*Bx.*By.*P11.*P23.*r.*cos(2.*theta)+(-8).*Bx.^2.* ...
  P21.*P23.*r.*cos(2.*theta)+(-8).*Bz.^2.*P21.*P23.*r.*cos(2.*theta) ...
  +8.*Bx.*Bz.*P13.*P31.*r.*cos(2.*theta)+8.*By.*Bz.*P23.*P31.*r.* ...
  cos(2.*theta)+8.*Bx.*Bz.*P11.*P33.*r.*cos(2.*theta)+8.*By.*Bz.* ...
  P21.*P33.*r.*cos(2.*theta)+(-8).*Bx.^2.*P31.*P33.*r.*cos(2.*theta) ...
  +(-8).*By.^2.*P31.*P33.*r.*cos(2.*theta)+(-1).*P11.^2.*r.*sin(2.* ...
  theta)+4.*By.^2.*P11.^2.*r.*sin(2.*theta)+4.*Bz.^2.*P11.^2.*r.* ...
  sin(2.*theta)+P13.^2.*r.*sin(2.*theta)+(-4).*By.^2.*P13.^2.*r.* ...
  sin(2.*theta)+(-4).*Bz.^2.*P13.^2.*r.*sin(2.*theta)+(-8).*Bx.*By.* ...
  P11.*P21.*r.*sin(2.*theta)+4.*Bx.^2.*P21.^2.*r.*sin(2.*theta)+4.* ...
  Bz.^2.*P21.^2.*r.*sin(2.*theta)+8.*Bx.*By.*P13.*P23.*r.*sin(2.* ...
  theta)+(-4).*Bx.^2.*P23.^2.*r.*sin(2.*theta)+(-4).*Bz.^2.*P23.^2.* ...
  r.*sin(2.*theta)+(-8).*Bx.*Bz.*P11.*P31.*r.*sin(2.*theta)+(-8).* ...
  By.*Bz.*P21.*P31.*r.*sin(2.*theta)+4.*Bx.^2.*P31.^2.*r.*sin(2.* ...
  theta)+4.*By.^2.*P31.^2.*r.*sin(2.*theta)+8.*Bx.*Bz.*P13.*P33.*r.* ...
  sin(2.*theta)+8.*By.*Bz.*P23.*P33.*r.*sin(2.*theta)+(-4).*Bx.^2.* ...
  P33.^2.*r.*sin(2.*theta)+(-4).*By.^2.*P33.^2.*r.*sin(2.*theta)),( ...
  P11.^2+(-4).*By.^2.*P11.^2+(-4).*Bz.^2.*P11.^2+P13.^2+(-4).* ...
  By.^2.*P13.^2+(-4).*Bz.^2.*P13.^2+8.*Bx.*By.*P11.*P21+(-4).* ...
  Bx.^2.*P21.^2+(-4).*Bz.^2.*P21.^2+8.*Bx.*By.*P13.*P23+(-4).* ...
  Bx.^2.*P23.^2+(-4).*Bz.^2.*P23.^2+8.*Bx.*Bz.*P11.*P31+8.*By.*Bz.* ...
  P21.*P31+(-4).*Bx.^2.*P31.^2+(-4).*By.^2.*P31.^2+8.*Bx.*Bz.*P13.* ...
  P33+8.*By.*Bz.*P23.*P33+(-4).*Bx.^2.*P33.^2+(-4).*By.^2.*P33.^2+(( ...
  (-1)+4.*By.^2+4.*Bz.^2).*P11.^2+(1+(-4).*By.^2+(-4).*Bz.^2).* ...
  P13.^2+(-8).*Bx.*P11.*(By.*P21+Bz.*P31)+8.*Bx.*P13.*(By.*P23+Bz.* ...
  P33)+4.*(Bz.^2.*(P21.^2+(-1).*P23.^2)+By.*Bz.*((-2).*P21.*P31+2.* ...
  P23.*P33)+By.^2.*(P31.^2+(-1).*P33.^2)+Bx.^2.*(P21.^2+(-1).* ...
  P23.^2+P31.^2+(-1).*P33.^2))).*cos(2.*theta)+((-8).*Bx.*P13.*(By.* ...
  P21+Bz.*P31)+8.*(Bz.*P21+(-1).*By.*P31).*(Bz.*P23+(-1).*By.*P33)+( ...
  -2).*P11.*(P13+(-4).*By.^2.*P13+(-4).*Bz.^2.*P13+4.*Bx.*By.*P23+ ...
  4.*Bx.*Bz.*P33)+8.*Bx.^2.*(P21.*P23+P31.*P33)).*sin(2.*theta)).^( ...
  -1).*((-4).*((-1).*(((-1)+4.*By.^2+4.*Bz.^2).*(Bz.*P13.*P21+(-1).* ...
  Bz.*P11.*P23+(-1).*By.*P13.*P31+By.*P11.*P33).^2+4.*Bx.^4.*(P23.* ...
  P31+(-1).*P21.*P33).^2+8.*Bx.*(By.^2+Bz.^2).*((-1).*Bz.*P13.*P21+ ...
  Bz.*P11.*P23+By.*P13.*P31+(-1).*By.*P11.*P33).*((-1).*P23.*P31+ ...
  P21.*P33)+(-8).*Bx.^3.*(Bz.*P13.*P21+(-1).*Bz.*P11.*P23+(-1).*By.* ...
  P13.*P31+By.*P11.*P33).*((-1).*P23.*P31+P21.*P33)+Bx.^2.*(P13.^2.* ...
  (((-1)+4.*Bz.^2).*P21.^2+(-8).*By.*Bz.*P21.*P31+((-1)+4.*By.^2).* ...
  P31.^2)+4.*(By.^2+Bz.^2).*(P23.*P31+(-1).*P21.*P33).^2+P11.^2.*((( ...
  -1)+4.*Bz.^2).*P23.^2+(-8).*By.*Bz.*P23.*P33+((-1)+4.*By.^2).* ...
  P33.^2)+2.*P11.*P13.*(P31.*(4.*By.*Bz.*P23+P33+(-4).*By.^2.*P33)+ ...
  P21.*(P23+(-4).*Bz.^2.*P23+4.*By.*Bz.*P33)))).*r.^2).^(1/2)+2.* ...
  P11.*P13.*r.*cos(2.*theta)+(-8).*By.^2.*P11.*P13.*r.*cos(2.*theta) ...
  +(-8).*Bz.^2.*P11.*P13.*r.*cos(2.*theta)+8.*Bx.*By.*P13.*P21.*r.* ...
  cos(2.*theta)+8.*Bx.*By.*P11.*P23.*r.*cos(2.*theta)+(-8).*Bx.^2.* ...
  P21.*P23.*r.*cos(2.*theta)+(-8).*Bz.^2.*P21.*P23.*r.*cos(2.*theta) ...
  +8.*Bx.*Bz.*P13.*P31.*r.*cos(2.*theta)+8.*By.*Bz.*P23.*P31.*r.* ...
  cos(2.*theta)+8.*Bx.*Bz.*P11.*P33.*r.*cos(2.*theta)+8.*By.*Bz.* ...
  P21.*P33.*r.*cos(2.*theta)+(-8).*Bx.^2.*P31.*P33.*r.*cos(2.*theta) ...
  +(-8).*By.^2.*P31.*P33.*r.*cos(2.*theta)+(-1).*P11.^2.*r.*sin(2.* ...
  theta)+4.*By.^2.*P11.^2.*r.*sin(2.*theta)+4.*Bz.^2.*P11.^2.*r.* ...
  sin(2.*theta)+P13.^2.*r.*sin(2.*theta)+(-4).*By.^2.*P13.^2.*r.* ...
  sin(2.*theta)+(-4).*Bz.^2.*P13.^2.*r.*sin(2.*theta)+(-8).*Bx.*By.* ...
  P11.*P21.*r.*sin(2.*theta)+4.*Bx.^2.*P21.^2.*r.*sin(2.*theta)+4.* ...
  Bz.^2.*P21.^2.*r.*sin(2.*theta)+8.*Bx.*By.*P13.*P23.*r.*sin(2.* ...
  theta)+(-4).*Bx.^2.*P23.^2.*r.*sin(2.*theta)+(-4).*Bz.^2.*P23.^2.* ...
  r.*sin(2.*theta)+(-8).*Bx.*Bz.*P11.*P31.*r.*sin(2.*theta)+(-8).* ...
  By.*Bz.*P21.*P31.*r.*sin(2.*theta)+4.*Bx.^2.*P31.^2.*r.*sin(2.* ...
  theta)+4.*By.^2.*P31.^2.*r.*sin(2.*theta)+8.*Bx.*Bz.*P13.*P33.*r.* ...
  sin(2.*theta)+8.*By.*Bz.*P23.*P33.*r.*sin(2.*theta)+(-4).*Bx.^2.* ...
  P33.^2.*r.*sin(2.*theta)+(-4).*By.^2.*P33.^2.*r.*sin(2.*theta));


drdtheta2 = (drdtheta2);


end