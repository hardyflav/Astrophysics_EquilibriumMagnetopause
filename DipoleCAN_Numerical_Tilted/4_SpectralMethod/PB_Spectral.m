
function drdtheta = PB_Spectral( theta, r, L, phi, ThetaCusp, ParaSystem )



%     r = real(r);
    NPhi = length(r);
    rhat = fft(real(r));
    kap = (2*pi/L) * [ -NPhi/2 : NPhi/2-1 ];
    kap = fftshift(kap.');
    drhat = i*kap.*rhat;
    
    drdphi = ifft(drhat);
    
%     Bfield = BfieldKSM(r, theta, phi);

    CoordinateDetails.Type = 'Spherical_MB';
    CoordinateDetails.Units = 'r0';
    PointCoordinates = [phi, 0*phi+theta, r];
    if PointCoordinates(:,2) == 0*phi
        phi = 0*phi;
    end
        
    Bfield = BField_Spectral(CoordinateDetails, PointCoordinates, ParaSystem);
    
    Bx = Bfield(:, 1);
    By = Bfield(:, 2);
    Bz = Bfield(:, 3);
    
    if theta == 0
        
        Alpha = acos( dot(ParaSystem.Nose.KSMU_Rp./norm(ParaSystem.Nose.KSMU_Rp), [1; 0; 0]) );
        drdtheta1 = 0*phi + r.*tan(Alpha);
        drdtheta2 = drdtheta1;
    
    % Pre-cusp region    
    elseif theta < ThetaCusp*pi/180
    
        drdtheta1 = (1/2).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos(theta).^2+(-8).*By.* ...
  Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+8.*Bx.*By.*cos(phi).* ...
  cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta).*sin(phi).*sin(theta) ...
  +(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.*sin(theta).^2+8.*By.* ...
  Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.*Bz.^2.*sin(phi).^2.*sin( ...
  theta).^2).^(-1).*((-8).*Bx.*Bz.*drdphi.*cos(phi)+(-8).*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+8.*Bx.*By.*drdphi.*sin(phi)+(-8).*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+2.*r.*cos(theta).*sin(theta)+8.* ...
  Bx.^2.*r.*cos(theta).*sin(theta)+(-8).*By.^2.*r.*cos(phi).^2.*cos( ...
  theta).*sin(theta)+(-16).*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+(-8).*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin( ...
  theta)+8.*Bx.*By.*r.*cos(phi).*sin(theta).^2+8.*Bx.*Bz.*r.*sin( ...
  phi).*sin(theta).^2+8.*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+(-8).*By.^2.*drdphi.*cos(phi).*(1+ ...
  (-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+8.*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+(-8).*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin( ...
  phi).^2.*sin(2.*theta)+(-1).*((8.*Bx.*Bz.*drdphi.*cos(phi)+8.*Bx.* ...
  By.*r.*cos(phi).*cos(theta).^2+(-8).*Bx.*By.*drdphi.*sin(phi)+8.* ...
  Bx.*Bz.*r.*cos(theta).^2.*sin(phi)+(-2).*r.*cos(theta).*sin(theta) ...
  +(-8).*Bx.^2.*r.*cos(theta).*sin(theta)+8.*By.^2.*r.*cos(phi).^2.* ...
  cos(theta).*sin(theta)+16.*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+8.*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin(theta)+ ...
  (-8).*Bx.*By.*r.*cos(phi).*sin(theta).^2+(-8).*Bx.*Bz.*r.*sin(phi) ...
  .*sin(theta).^2+(-8).*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+8.*By.^2.*drdphi.*cos(phi).*(1+( ...
  -1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+(-8).*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+8.*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi) ...
  .^2.*sin(2.*theta)).^2+(-4).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos( ...
  theta).^2+(-8).*By.*Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+ ...
  8.*Bx.*By.*cos(phi).*cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta) ...
  .*sin(phi).*sin(theta)+(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.* ...
  sin(theta).^2+8.*By.*Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.* ...
  Bz.^2.*sin(phi).^2.*sin(theta).^2).*(4.*Bx.^2.*drdphi.^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2+8.*By.*Bz.*drdphi.*r.*cos(phi).^2+ ...
  4.*Bz.^2.*r.^2.*cos(phi).^2+(-1).*r.^2.*cos(theta).^2+4.*By.^2.* ...
  r.^2.*cos(phi).^2.*cos(theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).* ...
  sin(phi)+(-8).*By.^2.*drdphi.*r.*cos(phi).*sin(phi)+8.*Bz.^2.* ...
  drdphi.*r.*cos(phi).*sin(phi)+(-8).*By.*Bz.*r.^2.*cos(phi).*sin( ...
  phi)+8.*By.*Bz.*r.^2.*cos(phi).*cos(theta).^2.*sin(phi)+4.*Bz.^2.* ...
  drdphi.^2.*sin(phi).^2+(-8).*By.*Bz.*drdphi.*r.*sin(phi).^2+4.* ...
  By.^2.*r.^2.*sin(phi).^2+4.*Bz.^2.*r.^2.*cos(theta).^2.*sin(phi) ...
  .^2+(-8).*Bx.*By.*r.^2.*cos(phi).*cos(theta).*sin(theta)+(-8).* ...
  Bx.*Bz.*r.^2.*cos(theta).*sin(phi).*sin(theta)+4.*Bx.^2.*r.^2.* ...
  sin(theta).^2+8.*Bx.*Bz.*drdphi.*r.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-1).*sin(2.*theta)+(-8).*Bx.*By.*drdphi.*r.*(1+(-1).* ...
  cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+4.*Bx.^2.* ...
  drdphi.^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin(2.*theta).^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin( ...
  2.*theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-2).*sin(phi).*sin(2.*theta).^2+4.*Bz.^2.*drdphi.^2.*(1+ ...
  (-1).*cos(2.*theta)).^(-2).*sin(phi).^2.*sin(2.*theta).^2)).^(1/2) ...
  );    

    drdtheta2 = (1/2).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos(theta).^2+(-8).*By.* ...
  Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+8.*Bx.*By.*cos(phi).* ...
  cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta).*sin(phi).*sin(theta) ...
  +(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.*sin(theta).^2+8.*By.* ...
  Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.*Bz.^2.*sin(phi).^2.*sin( ...
  theta).^2).^(-1).*((-8).*Bx.*Bz.*drdphi.*cos(phi)+(-8).*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+8.*Bx.*By.*drdphi.*sin(phi)+(-8).*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+2.*r.*cos(theta).*sin(theta)+8.* ...
  Bx.^2.*r.*cos(theta).*sin(theta)+(-8).*By.^2.*r.*cos(phi).^2.*cos( ...
  theta).*sin(theta)+(-16).*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+(-8).*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin( ...
  theta)+8.*Bx.*By.*r.*cos(phi).*sin(theta).^2+8.*Bx.*Bz.*r.*sin( ...
  phi).*sin(theta).^2+8.*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+(-8).*By.^2.*drdphi.*cos(phi).*(1+ ...
  (-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+8.*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+(-8).*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin( ...
  phi).^2.*sin(2.*theta)+((8.*Bx.*Bz.*drdphi.*cos(phi)+8.*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+(-8).*Bx.*By.*drdphi.*sin(phi)+8.*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+(-2).*r.*cos(theta).*sin(theta)+( ...
  -8).*Bx.^2.*r.*cos(theta).*sin(theta)+8.*By.^2.*r.*cos(phi).^2.* ...
  cos(theta).*sin(theta)+16.*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+8.*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin(theta)+ ...
  (-8).*Bx.*By.*r.*cos(phi).*sin(theta).^2+(-8).*Bx.*Bz.*r.*sin(phi) ...
  .*sin(theta).^2+(-8).*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+8.*By.^2.*drdphi.*cos(phi).*(1+( ...
  -1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+(-8).*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+8.*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi) ...
  .^2.*sin(2.*theta)).^2+(-4).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos( ...
  theta).^2+(-8).*By.*Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+ ...
  8.*Bx.*By.*cos(phi).*cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta) ...
  .*sin(phi).*sin(theta)+(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.* ...
  sin(theta).^2+8.*By.*Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.* ...
  Bz.^2.*sin(phi).^2.*sin(theta).^2).*(4.*Bx.^2.*drdphi.^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2+8.*By.*Bz.*drdphi.*r.*cos(phi).^2+ ...
  4.*Bz.^2.*r.^2.*cos(phi).^2+(-1).*r.^2.*cos(theta).^2+4.*By.^2.* ...
  r.^2.*cos(phi).^2.*cos(theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).* ...
  sin(phi)+(-8).*By.^2.*drdphi.*r.*cos(phi).*sin(phi)+8.*Bz.^2.* ...
  drdphi.*r.*cos(phi).*sin(phi)+(-8).*By.*Bz.*r.^2.*cos(phi).*sin( ...
  phi)+8.*By.*Bz.*r.^2.*cos(phi).*cos(theta).^2.*sin(phi)+4.*Bz.^2.* ...
  drdphi.^2.*sin(phi).^2+(-8).*By.*Bz.*drdphi.*r.*sin(phi).^2+4.* ...
  By.^2.*r.^2.*sin(phi).^2+4.*Bz.^2.*r.^2.*cos(theta).^2.*sin(phi) ...
  .^2+(-8).*Bx.*By.*r.^2.*cos(phi).*cos(theta).*sin(theta)+(-8).* ...
  Bx.*Bz.*r.^2.*cos(theta).*sin(phi).*sin(theta)+4.*Bx.^2.*r.^2.* ...
  sin(theta).^2+8.*Bx.*Bz.*drdphi.*r.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-1).*sin(2.*theta)+(-8).*Bx.*By.*drdphi.*r.*(1+(-1).* ...
  cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+4.*Bx.^2.* ...
  drdphi.^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin(2.*theta).^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin( ...
  2.*theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-2).*sin(phi).*sin(2.*theta).^2+4.*Bz.^2.*drdphi.^2.*(1+ ...
  (-1).*cos(2.*theta)).^(-2).*sin(phi).^2.*sin(2.*theta).^2)).^(1/2) ...
  );

    end
    
    drdtheta = real(drdtheta1);
end

%{
  drdtheta1 = (1/2).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos(theta).^2+(-8).*By.* ...
  Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+8.*Bx.*By.*cos(phi).* ...
  cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta).*sin(phi).*sin(theta) ...
  +(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.*sin(theta).^2+8.*By.* ...
  Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.*Bz.^2.*sin(phi).^2.*sin( ...
  theta).^2).^(-1).*((-8).*Bx.*Bz.*drdphi.*cos(phi)+(-8).*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+8.*Bx.*By.*drdphi.*sin(phi)+(-8).*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+2.*r.*cos(theta).*sin(theta)+8.* ...
  Bx.^2.*r.*cos(theta).*sin(theta)+(-8).*By.^2.*r.*cos(phi).^2.*cos( ...
  theta).*sin(theta)+(-16).*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+(-8).*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin( ...
  theta)+8.*Bx.*By.*r.*cos(phi).*sin(theta).^2+8.*Bx.*Bz.*r.*sin( ...
  phi).*sin(theta).^2+8.*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+(-8).*By.^2.*drdphi.*cos(phi).*(1+ ...
  (-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+8.*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+(-8).*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin( ...
  phi).^2.*sin(2.*theta)+(-1).*((8.*Bx.*Bz.*drdphi.*cos(phi)+8.*Bx.* ...
  By.*r.*cos(phi).*cos(theta).^2+(-8).*Bx.*By.*drdphi.*sin(phi)+8.* ...
  Bx.*Bz.*r.*cos(theta).^2.*sin(phi)+(-2).*r.*cos(theta).*sin(theta) ...
  +(-8).*Bx.^2.*r.*cos(theta).*sin(theta)+8.*By.^2.*r.*cos(phi).^2.* ...
  cos(theta).*sin(theta)+16.*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+8.*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin(theta)+ ...
  (-8).*Bx.*By.*r.*cos(phi).*sin(theta).^2+(-8).*Bx.*Bz.*r.*sin(phi) ...
  .*sin(theta).^2+(-8).*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+8.*By.^2.*drdphi.*cos(phi).*(1+( ...
  -1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+(-8).*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+8.*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi) ...
  .^2.*sin(2.*theta)).^2+(-4).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos( ...
  theta).^2+(-8).*By.*Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+ ...
  8.*Bx.*By.*cos(phi).*cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta) ...
  .*sin(phi).*sin(theta)+(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.* ...
  sin(theta).^2+8.*By.*Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.* ...
  Bz.^2.*sin(phi).^2.*sin(theta).^2).*(4.*Bx.^2.*drdphi.^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2+8.*By.*Bz.*drdphi.*r.*cos(phi).^2+ ...
  4.*Bz.^2.*r.^2.*cos(phi).^2+(-1).*r.^2.*cos(theta).^2+4.*By.^2.* ...
  r.^2.*cos(phi).^2.*cos(theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).* ...
  sin(phi)+(-8).*By.^2.*drdphi.*r.*cos(phi).*sin(phi)+8.*Bz.^2.* ...
  drdphi.*r.*cos(phi).*sin(phi)+(-8).*By.*Bz.*r.^2.*cos(phi).*sin( ...
  phi)+8.*By.*Bz.*r.^2.*cos(phi).*cos(theta).^2.*sin(phi)+4.*Bz.^2.* ...
  drdphi.^2.*sin(phi).^2+(-8).*By.*Bz.*drdphi.*r.*sin(phi).^2+4.* ...
  By.^2.*r.^2.*sin(phi).^2+4.*Bz.^2.*r.^2.*cos(theta).^2.*sin(phi) ...
  .^2+(-8).*Bx.*By.*r.^2.*cos(phi).*cos(theta).*sin(theta)+(-8).* ...
  Bx.*Bz.*r.^2.*cos(theta).*sin(phi).*sin(theta)+4.*Bx.^2.*r.^2.* ...
  sin(theta).^2+8.*Bx.*Bz.*drdphi.*r.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-1).*sin(2.*theta)+(-8).*Bx.*By.*drdphi.*r.*(1+(-1).* ...
  cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+4.*Bx.^2.* ...
  drdphi.^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin(2.*theta).^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin( ...
  2.*theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-2).*sin(phi).*sin(2.*theta).^2+4.*Bz.^2.*drdphi.^2.*(1+ ...
  (-1).*cos(2.*theta)).^(-2).*sin(phi).^2.*sin(2.*theta).^2)).^(1/2) ...
  );        
        
     drdtheta2 = (1/2).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos(theta).^2+(-8).*By.* ...
  Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+8.*Bx.*By.*cos(phi).* ...
  cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta).*sin(phi).*sin(theta) ...
  +(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.*sin(theta).^2+8.*By.* ...
  Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.*Bz.^2.*sin(phi).^2.*sin( ...
  theta).^2).^(-1).*((-8).*Bx.*Bz.*drdphi.*cos(phi)+(-8).*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+8.*Bx.*By.*drdphi.*sin(phi)+(-8).*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+2.*r.*cos(theta).*sin(theta)+8.* ...
  Bx.^2.*r.*cos(theta).*sin(theta)+(-8).*By.^2.*r.*cos(phi).^2.*cos( ...
  theta).*sin(theta)+(-16).*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+(-8).*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin( ...
  theta)+8.*Bx.*By.*r.*cos(phi).*sin(theta).^2+8.*Bx.*Bz.*r.*sin( ...
  phi).*sin(theta).^2+8.*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+(-8).*By.^2.*drdphi.*cos(phi).*(1+ ...
  (-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+8.*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+(-8).*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin( ...
  phi).^2.*sin(2.*theta)+((8.*Bx.*Bz.*drdphi.*cos(phi)+8.*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+(-8).*Bx.*By.*drdphi.*sin(phi)+8.*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+(-2).*r.*cos(theta).*sin(theta)+( ...
  -8).*Bx.^2.*r.*cos(theta).*sin(theta)+8.*By.^2.*r.*cos(phi).^2.* ...
  cos(theta).*sin(theta)+16.*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+8.*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin(theta)+ ...
  (-8).*Bx.*By.*r.*cos(phi).*sin(theta).^2+(-8).*Bx.*Bz.*r.*sin(phi) ...
  .*sin(theta).^2+(-8).*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+8.*By.^2.*drdphi.*cos(phi).*(1+( ...
  -1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+(-8).*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+8.*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi) ...
  .^2.*sin(2.*theta)).^2+(-4).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos( ...
  theta).^2+(-8).*By.*Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+ ...
  8.*Bx.*By.*cos(phi).*cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta) ...
  .*sin(phi).*sin(theta)+(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.* ...
  sin(theta).^2+8.*By.*Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.* ...
  Bz.^2.*sin(phi).^2.*sin(theta).^2).*(4.*Bx.^2.*drdphi.^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2+8.*By.*Bz.*drdphi.*r.*cos(phi).^2+ ...
  4.*Bz.^2.*r.^2.*cos(phi).^2+(-1).*r.^2.*cos(theta).^2+4.*By.^2.* ...
  r.^2.*cos(phi).^2.*cos(theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).* ...
  sin(phi)+(-8).*By.^2.*drdphi.*r.*cos(phi).*sin(phi)+8.*Bz.^2.* ...
  drdphi.*r.*cos(phi).*sin(phi)+(-8).*By.*Bz.*r.^2.*cos(phi).*sin( ...
  phi)+8.*By.*Bz.*r.^2.*cos(phi).*cos(theta).^2.*sin(phi)+4.*Bz.^2.* ...
  drdphi.^2.*sin(phi).^2+(-8).*By.*Bz.*drdphi.*r.*sin(phi).^2+4.* ...
  By.^2.*r.^2.*sin(phi).^2+4.*Bz.^2.*r.^2.*cos(theta).^2.*sin(phi) ...
  .^2+(-8).*Bx.*By.*r.^2.*cos(phi).*cos(theta).*sin(theta)+(-8).* ...
  Bx.*Bz.*r.^2.*cos(theta).*sin(phi).*sin(theta)+4.*Bx.^2.*r.^2.* ...
  sin(theta).^2+8.*Bx.*Bz.*drdphi.*r.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-1).*sin(2.*theta)+(-8).*Bx.*By.*drdphi.*r.*(1+(-1).* ...
  cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+4.*Bx.^2.* ...
  drdphi.^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin(2.*theta).^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin( ...
  2.*theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-2).*sin(phi).*sin(2.*theta).^2+4.*Bz.^2.*drdphi.^2.*(1+ ...
  (-1).*cos(2.*theta)).^(-2).*sin(phi).^2.*sin(2.*theta).^2)).^(1/2) ...
  );
 
    % Post-cusp region    
    else
        
   drdtheta1 = (1/2).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos(theta).^2+(-8).*By.* ...
  Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+8.*Bx.*By.*cos(phi).* ...
  cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta).*sin(phi).*sin(theta) ...
  +(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.*sin(theta).^2+8.*By.* ...
  Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.*Bz.^2.*sin(phi).^2.*sin( ...
  theta).^2).^(-1).*((-8).*Bx.*Bz.*drdphi.*cos(phi)+(-8).*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+8.*Bx.*By.*drdphi.*sin(phi)+(-8).*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+2.*r.*cos(theta).*sin(theta)+8.* ...
  Bx.^2.*r.*cos(theta).*sin(theta)+(-8).*By.^2.*r.*cos(phi).^2.*cos( ...
  theta).*sin(theta)+(-16).*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+(-8).*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin( ...
  theta)+8.*Bx.*By.*r.*cos(phi).*sin(theta).^2+8.*Bx.*Bz.*r.*sin( ...
  phi).*sin(theta).^2+8.*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+(-8).*By.^2.*drdphi.*cos(phi).*(1+ ...
  (-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+8.*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+(-8).*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin( ...
  phi).^2.*sin(2.*theta)+(-1).*((8.*Bx.*Bz.*drdphi.*cos(phi)+8.*Bx.* ...
  By.*r.*cos(phi).*cos(theta).^2+(-8).*Bx.*By.*drdphi.*sin(phi)+8.* ...
  Bx.*Bz.*r.*cos(theta).^2.*sin(phi)+(-2).*r.*cos(theta).*sin(theta) ...
  +(-8).*Bx.^2.*r.*cos(theta).*sin(theta)+8.*By.^2.*r.*cos(phi).^2.* ...
  cos(theta).*sin(theta)+16.*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+8.*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin(theta)+ ...
  (-8).*Bx.*By.*r.*cos(phi).*sin(theta).^2+(-8).*Bx.*Bz.*r.*sin(phi) ...
  .*sin(theta).^2+(-8).*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+8.*By.^2.*drdphi.*cos(phi).*(1+( ...
  -1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+(-8).*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+8.*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi) ...
  .^2.*sin(2.*theta)).^2+(-4).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos( ...
  theta).^2+(-8).*By.*Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+ ...
  8.*Bx.*By.*cos(phi).*cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta) ...
  .*sin(phi).*sin(theta)+(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.* ...
  sin(theta).^2+8.*By.*Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.* ...
  Bz.^2.*sin(phi).^2.*sin(theta).^2).*(4.*Bx.^2.*drdphi.^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2+8.*By.*Bz.*drdphi.*r.*cos(phi).^2+ ...
  4.*Bz.^2.*r.^2.*cos(phi).^2+(-1).*r.^2.*cos(theta).^2+4.*By.^2.* ...
  r.^2.*cos(phi).^2.*cos(theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).* ...
  sin(phi)+(-8).*By.^2.*drdphi.*r.*cos(phi).*sin(phi)+8.*Bz.^2.* ...
  drdphi.*r.*cos(phi).*sin(phi)+(-8).*By.*Bz.*r.^2.*cos(phi).*sin( ...
  phi)+8.*By.*Bz.*r.^2.*cos(phi).*cos(theta).^2.*sin(phi)+4.*Bz.^2.* ...
  drdphi.^2.*sin(phi).^2+(-8).*By.*Bz.*drdphi.*r.*sin(phi).^2+4.* ...
  By.^2.*r.^2.*sin(phi).^2+4.*Bz.^2.*r.^2.*cos(theta).^2.*sin(phi) ...
  .^2+(-8).*Bx.*By.*r.^2.*cos(phi).*cos(theta).*sin(theta)+(-8).* ...
  Bx.*Bz.*r.^2.*cos(theta).*sin(phi).*sin(theta)+4.*Bx.^2.*r.^2.* ...
  sin(theta).^2+8.*Bx.*Bz.*drdphi.*r.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-1).*sin(2.*theta)+(-8).*Bx.*By.*drdphi.*r.*(1+(-1).* ...
  cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+4.*Bx.^2.* ...
  drdphi.^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin(2.*theta).^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin( ...
  2.*theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-2).*sin(phi).*sin(2.*theta).^2+4.*Bz.^2.*drdphi.^2.*(1+ ...
  (-1).*cos(2.*theta)).^(-2).*sin(phi).^2.*sin(2.*theta).^2)).^(1/2) ...
  );        
        
     drdtheta2 = (1/2).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos(theta).^2+(-8).*By.* ...
  Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+8.*Bx.*By.*cos(phi).* ...
  cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta).*sin(phi).*sin(theta) ...
  +(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.*sin(theta).^2+8.*By.* ...
  Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.*Bz.^2.*sin(phi).^2.*sin( ...
  theta).^2).^(-1).*((-8).*Bx.*Bz.*drdphi.*cos(phi)+(-8).*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+8.*Bx.*By.*drdphi.*sin(phi)+(-8).*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+2.*r.*cos(theta).*sin(theta)+8.* ...
  Bx.^2.*r.*cos(theta).*sin(theta)+(-8).*By.^2.*r.*cos(phi).^2.*cos( ...
  theta).*sin(theta)+(-16).*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+(-8).*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin( ...
  theta)+8.*Bx.*By.*r.*cos(phi).*sin(theta).^2+8.*Bx.*Bz.*r.*sin( ...
  phi).*sin(theta).^2+8.*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+(-8).*By.^2.*drdphi.*cos(phi).*(1+ ...
  (-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+8.*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+(-8).*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin( ...
  phi).^2.*sin(2.*theta)+((8.*Bx.*Bz.*drdphi.*cos(phi)+8.*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+(-8).*Bx.*By.*drdphi.*sin(phi)+8.*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+(-2).*r.*cos(theta).*sin(theta)+( ...
  -8).*Bx.^2.*r.*cos(theta).*sin(theta)+8.*By.^2.*r.*cos(phi).^2.* ...
  cos(theta).*sin(theta)+16.*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+8.*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin(theta)+ ...
  (-8).*Bx.*By.*r.*cos(phi).*sin(theta).^2+(-8).*Bx.*Bz.*r.*sin(phi) ...
  .*sin(theta).^2+(-8).*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+8.*By.^2.*drdphi.*cos(phi).*(1+( ...
  -1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+(-8).*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+8.*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi) ...
  .^2.*sin(2.*theta)).^2+(-4).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos( ...
  theta).^2+(-8).*By.*Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+ ...
  8.*Bx.*By.*cos(phi).*cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta) ...
  .*sin(phi).*sin(theta)+(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.* ...
  sin(theta).^2+8.*By.*Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.* ...
  Bz.^2.*sin(phi).^2.*sin(theta).^2).*(4.*Bx.^2.*drdphi.^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2+8.*By.*Bz.*drdphi.*r.*cos(phi).^2+ ...
  4.*Bz.^2.*r.^2.*cos(phi).^2+(-1).*r.^2.*cos(theta).^2+4.*By.^2.* ...
  r.^2.*cos(phi).^2.*cos(theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).* ...
  sin(phi)+(-8).*By.^2.*drdphi.*r.*cos(phi).*sin(phi)+8.*Bz.^2.* ...
  drdphi.*r.*cos(phi).*sin(phi)+(-8).*By.*Bz.*r.^2.*cos(phi).*sin( ...
  phi)+8.*By.*Bz.*r.^2.*cos(phi).*cos(theta).^2.*sin(phi)+4.*Bz.^2.* ...
  drdphi.^2.*sin(phi).^2+(-8).*By.*Bz.*drdphi.*r.*sin(phi).^2+4.* ...
  By.^2.*r.^2.*sin(phi).^2+4.*Bz.^2.*r.^2.*cos(theta).^2.*sin(phi) ...
  .^2+(-8).*Bx.*By.*r.^2.*cos(phi).*cos(theta).*sin(theta)+(-8).* ...
  Bx.*Bz.*r.^2.*cos(theta).*sin(phi).*sin(theta)+4.*Bx.^2.*r.^2.* ...
  sin(theta).^2+8.*Bx.*Bz.*drdphi.*r.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-1).*sin(2.*theta)+(-8).*Bx.*By.*drdphi.*r.*(1+(-1).* ...
  cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+4.*Bx.^2.* ...
  drdphi.^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin(2.*theta).^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin( ...
  2.*theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-2).*sin(phi).*sin(2.*theta).^2+4.*Bz.^2.*drdphi.^2.*(1+ ...
  (-1).*cos(2.*theta)).^(-2).*sin(phi).^2.*sin(2.*theta).^2)).^(1/2) ...
  );

    drdtheta = drdtheta1;
    PhiLim = 10*pi/180;
    drdtheta(abs(phi-pi/2)<PhiLim | abs(phi+pi/2)<PhiLim) = drdtheta2(abs(phi-pi/2)<PhiLim | abs(phi+pi/2)<PhiLim);

    
  
    end
    
    
    drdtheta = drdtheta2;
    drdtheta = real(drdtheta);

    %% Test
    
%{
    if theta == 71*pi/180
        C=1
    end
    
    Delta = (-4).*(4.*Bx.^2.*cos(theta).^2+4.*By.^2.*sin(phi).^2+8.*Bx.*Bz.* ...
  cos(theta).*sin(phi).*sin(theta)+(-1).*sin(theta).^2+4.*Bz.^2.* ...
  sin(phi).^2.*sin(theta).^2+8.*By.*cos(phi).*cos(theta).*((-1).* ...
  Bz.*cos(theta).*sin(phi)+Bx.*sin(theta))+4.*cos(phi).^2.*(Bz.^2+ ...
  By.^2.*sin(theta).^2)).*(4.*cos(phi).^2.*((By.*drdphi+Bz.*r).^2+ ...
  By.^2.*r.^2.*cos(theta).^2+By.^2.*drdphi.^2.*cot(theta).^2)+r.^2.* ...
  cos(theta).^2.*((-1)+4.*Bz.^2.*sin(phi).^2)+(-8).*Bx.*Bz.*r.^2.* ...
  cos(theta).*sin(phi).*sin(theta)+4.*((-2).*Bx.*By.*drdphi.*r.*cot( ...
  theta).*sin(phi)+(Bz.*drdphi+(-1).*By.*r).^2.*sin(phi).^2+ ...
  drdphi.^2.*cot(theta).^2.*(Bx.^2+Bz.^2.*sin(phi).^2)+Bx.^2.*( ...
  drdphi.^2+r.^2.*sin(theta).^2))+2.*cos(phi).*(2.*Bz.*drdphi+(-1).* ...
  By.*r+By.*r.*cos(2.*theta)).*csc(theta).^2.*((2.*By.*drdphi+Bz.*r+ ...
  (-1).*Bz.*r.*cos(2.*theta)).*sin(phi)+Bx.*r.*sin(2.*theta)))+4.*( ...
  4.*Bx.*(By.*drdphi+(-1).*Bz.*r.*cos(2.*theta)).*sin(phi)+(1+4.* ...
  Bx.^2).*r.*cos(theta).*sin(theta)+4.*By.*cos(phi).^2.*(Bz.* ...
  drdphi.*cot(theta)+(-1).*By.*r.*cos(theta).*sin(theta))+(-4).*Bz.* ...
  sin(phi).^2.*(By.*drdphi.*cot(theta)+Bz.*r.*cos(theta).*sin(theta) ...
  )+(-4).*cos(phi).*(Bx.*Bz.*drdphi+Bx.*By.*r.*cos(theta).^2+(By.^2+ ...
  (-1).*Bz.^2).*drdphi.*cot(theta).*sin(phi)+(-1).*Bx.*By.*r.*sin( ...
  theta).^2+By.*Bz.*r.*sin(phi).*sin(2.*theta))).^2;
    
    figure
    plot(phi.*180/pi, Delta ./ max(Delta))
    
    
    
    
    
    
    
    
    drdtheta1 = (1/2).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos(theta).^2+(-8).*By.* ...
  Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+8.*Bx.*By.*cos(phi).* ...
  cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta).*sin(phi).*sin(theta) ...
  +(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.*sin(theta).^2+8.*By.* ...
  Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.*Bz.^2.*sin(phi).^2.*sin( ...
  theta).^2).^(-1).*((-8).*Bx.*Bz.*drdphi.*cos(phi)+(-8).*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+8.*Bx.*By.*drdphi.*sin(phi)+(-8).*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+2.*r.*cos(theta).*sin(theta)+8.* ...
  Bx.^2.*r.*cos(theta).*sin(theta)+(-8).*By.^2.*r.*cos(phi).^2.*cos( ...
  theta).*sin(theta)+(-16).*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+(-8).*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin( ...
  theta)+8.*Bx.*By.*r.*cos(phi).*sin(theta).^2+8.*Bx.*Bz.*r.*sin( ...
  phi).*sin(theta).^2+8.*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+(-8).*By.^2.*drdphi.*cos(phi).*(1+ ...
  (-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+8.*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+(-8).*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin( ...
  phi).^2.*sin(2.*theta)+(-1).*((8.*Bx.*Bz.*drdphi.*cos(phi)+8.*Bx.* ...
  By.*r.*cos(phi).*cos(theta).^2+(-8).*Bx.*By.*drdphi.*sin(phi)+8.* ...
  Bx.*Bz.*r.*cos(theta).^2.*sin(phi)+(-2).*r.*cos(theta).*sin(theta) ...
  +(-8).*Bx.^2.*r.*cos(theta).*sin(theta)+8.*By.^2.*r.*cos(phi).^2.* ...
  cos(theta).*sin(theta)+16.*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+8.*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin(theta)+ ...
  (-8).*Bx.*By.*r.*cos(phi).*sin(theta).^2+(-8).*Bx.*Bz.*r.*sin(phi) ...
  .*sin(theta).^2+(-8).*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+8.*By.^2.*drdphi.*cos(phi).*(1+( ...
  -1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+(-8).*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+8.*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi) ...
  .^2.*sin(2.*theta)).^2+(-4).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos( ...
  theta).^2+(-8).*By.*Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+ ...
  8.*Bx.*By.*cos(phi).*cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta) ...
  .*sin(phi).*sin(theta)+(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.* ...
  sin(theta).^2+8.*By.*Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.* ...
  Bz.^2.*sin(phi).^2.*sin(theta).^2).*(4.*Bx.^2.*drdphi.^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2+8.*By.*Bz.*drdphi.*r.*cos(phi).^2+ ...
  4.*Bz.^2.*r.^2.*cos(phi).^2+(-1).*r.^2.*cos(theta).^2+4.*By.^2.* ...
  r.^2.*cos(phi).^2.*cos(theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).* ...
  sin(phi)+(-8).*By.^2.*drdphi.*r.*cos(phi).*sin(phi)+8.*Bz.^2.* ...
  drdphi.*r.*cos(phi).*sin(phi)+(-8).*By.*Bz.*r.^2.*cos(phi).*sin( ...
  phi)+8.*By.*Bz.*r.^2.*cos(phi).*cos(theta).^2.*sin(phi)+4.*Bz.^2.* ...
  drdphi.^2.*sin(phi).^2+(-8).*By.*Bz.*drdphi.*r.*sin(phi).^2+4.* ...
  By.^2.*r.^2.*sin(phi).^2+4.*Bz.^2.*r.^2.*cos(theta).^2.*sin(phi) ...
  .^2+(-8).*Bx.*By.*r.^2.*cos(phi).*cos(theta).*sin(theta)+(-8).* ...
  Bx.*Bz.*r.^2.*cos(theta).*sin(phi).*sin(theta)+4.*Bx.^2.*r.^2.* ...
  sin(theta).^2+8.*Bx.*Bz.*drdphi.*r.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-1).*sin(2.*theta)+(-8).*Bx.*By.*drdphi.*r.*(1+(-1).* ...
  cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+4.*Bx.^2.* ...
  drdphi.^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin(2.*theta).^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin( ...
  2.*theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-2).*sin(phi).*sin(2.*theta).^2+4.*Bz.^2.*drdphi.^2.*(1+ ...
  (-1).*cos(2.*theta)).^(-2).*sin(phi).^2.*sin(2.*theta).^2)).^(1/2) ...
  );    

     drdtheta2 = (1/2).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos(theta).^2+(-8).*By.* ...
  Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+8.*Bx.*By.*cos(phi).* ...
  cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta).*sin(phi).*sin(theta) ...
  +(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.*sin(theta).^2+8.*By.* ...
  Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.*Bz.^2.*sin(phi).^2.*sin( ...
  theta).^2).^(-1).*((-8).*Bx.*Bz.*drdphi.*cos(phi)+(-8).*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+8.*Bx.*By.*drdphi.*sin(phi)+(-8).*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+2.*r.*cos(theta).*sin(theta)+8.* ...
  Bx.^2.*r.*cos(theta).*sin(theta)+(-8).*By.^2.*r.*cos(phi).^2.*cos( ...
  theta).*sin(theta)+(-16).*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+(-8).*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin( ...
  theta)+8.*Bx.*By.*r.*cos(phi).*sin(theta).^2+8.*Bx.*Bz.*r.*sin( ...
  phi).*sin(theta).^2+8.*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+(-8).*By.^2.*drdphi.*cos(phi).*(1+ ...
  (-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+8.*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+(-8).*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin( ...
  phi).^2.*sin(2.*theta)+((8.*Bx.*Bz.*drdphi.*cos(phi)+8.*Bx.*By.* ...
  r.*cos(phi).*cos(theta).^2+(-8).*Bx.*By.*drdphi.*sin(phi)+8.*Bx.* ...
  Bz.*r.*cos(theta).^2.*sin(phi)+(-2).*r.*cos(theta).*sin(theta)+( ...
  -8).*Bx.^2.*r.*cos(theta).*sin(theta)+8.*By.^2.*r.*cos(phi).^2.* ...
  cos(theta).*sin(theta)+16.*By.*Bz.*r.*cos(phi).*cos(theta).*sin( ...
  phi).*sin(theta)+8.*Bz.^2.*r.*cos(theta).*sin(phi).^2.*sin(theta)+ ...
  (-8).*Bx.*By.*r.*cos(phi).*sin(theta).^2+(-8).*Bx.*Bz.*r.*sin(phi) ...
  .*sin(theta).^2+(-8).*By.*Bz.*drdphi.*cos(phi).^2.*(1+(-1).*cos( ...
  2.*theta)).^(-1).*sin(2.*theta)+8.*By.^2.*drdphi.*cos(phi).*(1+( ...
  -1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+(-8).*Bz.^2.* ...
  drdphi.*cos(phi).*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi).*sin(2.* ...
  theta)+8.*By.*Bz.*drdphi.*(1+(-1).*cos(2.*theta)).^(-1).*sin(phi) ...
  .^2.*sin(2.*theta)).^2+(-4).*(4.*Bz.^2.*cos(phi).^2+4.*Bx.^2.*cos( ...
  theta).^2+(-8).*By.*Bz.*cos(phi).*sin(phi)+4.*By.^2.*sin(phi).^2+ ...
  8.*Bx.*By.*cos(phi).*cos(theta).*sin(theta)+8.*Bx.*Bz.*cos(theta) ...
  .*sin(phi).*sin(theta)+(-1).*sin(theta).^2+4.*By.^2.*cos(phi).^2.* ...
  sin(theta).^2+8.*By.*Bz.*cos(phi).*sin(phi).*sin(theta).^2+4.* ...
  Bz.^2.*sin(phi).^2.*sin(theta).^2).*(4.*Bx.^2.*drdphi.^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2+8.*By.*Bz.*drdphi.*r.*cos(phi).^2+ ...
  4.*Bz.^2.*r.^2.*cos(phi).^2+(-1).*r.^2.*cos(theta).^2+4.*By.^2.* ...
  r.^2.*cos(phi).^2.*cos(theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).* ...
  sin(phi)+(-8).*By.^2.*drdphi.*r.*cos(phi).*sin(phi)+8.*Bz.^2.* ...
  drdphi.*r.*cos(phi).*sin(phi)+(-8).*By.*Bz.*r.^2.*cos(phi).*sin( ...
  phi)+8.*By.*Bz.*r.^2.*cos(phi).*cos(theta).^2.*sin(phi)+4.*Bz.^2.* ...
  drdphi.^2.*sin(phi).^2+(-8).*By.*Bz.*drdphi.*r.*sin(phi).^2+4.* ...
  By.^2.*r.^2.*sin(phi).^2+4.*Bz.^2.*r.^2.*cos(theta).^2.*sin(phi) ...
  .^2+(-8).*Bx.*By.*r.^2.*cos(phi).*cos(theta).*sin(theta)+(-8).* ...
  Bx.*Bz.*r.^2.*cos(theta).*sin(phi).*sin(theta)+4.*Bx.^2.*r.^2.* ...
  sin(theta).^2+8.*Bx.*Bz.*drdphi.*r.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-1).*sin(2.*theta)+(-8).*Bx.*By.*drdphi.*r.*(1+(-1).* ...
  cos(2.*theta)).^(-1).*sin(phi).*sin(2.*theta)+4.*Bx.^2.* ...
  drdphi.^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin(2.*theta).^2+4.* ...
  By.^2.*drdphi.^2.*cos(phi).^2.*(1+(-1).*cos(2.*theta)).^(-2).*sin( ...
  2.*theta).^2+8.*By.*Bz.*drdphi.^2.*cos(phi).*(1+(-1).*cos(2.* ...
  theta)).^(-2).*sin(phi).*sin(2.*theta).^2+4.*Bz.^2.*drdphi.^2.*(1+ ...
  (-1).*cos(2.*theta)).^(-2).*sin(phi).^2.*sin(2.*theta).^2)).^(1/2) ...
  );

% figure
% hold on
%     plot(phi .*180/pi, drdtheta1 ./ max(drdtheta1))
%     plot(phi .*180/pi, drdtheta2 ./ max(drdtheta2))

    
%}
    
    
    
end
%}